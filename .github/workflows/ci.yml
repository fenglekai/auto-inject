name: ci

on: 
  push: 
    tags:
      - "v*"
    paths:
      - "src/**"
      - "buildAssets/**"
      - "electron-builder.json5"
      - "!**/*.md"
      - ".github/workflows/ci.yml"

jobs:
  create-tag:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          show-progress: false
          ref: ${{ github.ref_name }}

      - name: Get version
        id: package
        uses: actions/github-script@v5
        with:
          script: |
            const package = require('./package.json')
            return package.version

      - name: Output version
        id: version
        run: | 
          echo "The version is ${{ steps.package.outputs.result }}"
          echo "version=$(echo ${{ steps.package.outputs.result }} | tr -d '"')" >> $GITHUB_OUTPUT
          echo "release_tag=$(echo v${{ steps.package.outputs.result }} | tr -d '"')" >> $GITHUB_OUTPUT
    outputs:
      version: ${{ steps.version.outputs.version }}
      release_tag: ${{ steps.version.outputs.release_tag }}
    
  electron:
    needs: create-tag
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            build: "build:linux"
            
          - os: windows-latest
            build: "build:win"

          - os: macos-latest
            build: "build:mac"
        
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          show-progress: false
          ref: ${{ github.ref_name }}

      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: '16'

      - name: Check release tag
        run: echo "The release_tag is ${{ needs.create-tag.outputs.release_tag }}"

      - name: setup macos environment
        if: ${{ matrix.os == 'macos-latest' }}
        run: npm install dmg-license

      - name: Build
        run: |
          npm install
          npm run ${{ matrix.build }}

      - name: Check Build
        run: ls release/${{ needs.create-tag.outputs.version }}/

      - name: Upload artifact for windows
        if: ${{ matrix.os == 'windows-latest' }}
        uses: actions/upload-artifact@v4
        with:
          name: AutoInject-win
          path: |
            release/${{ needs.create-tag.outputs.version }}/*.exe
            release/${{ needs.create-tag.outputs.version }}/*.zip

      - name: Upload artifact for linux
        if: ${{ matrix.os == 'ubuntu-latest' }}
        uses: actions/upload-artifact@v4
        with:
          name: AutoInject-linux
          path: |
            release/${{ needs.create-tag.outputs.version }}/*.deb
            release/${{ needs.create-tag.outputs.version }}/*.AppImage

      - name: Upload artifact for macos
        if: ${{ matrix.os == 'macos-latest' }}
        uses: actions/upload-artifact@v4
        with:
          name: AutoInject-macos
          path: |
            release/${{ needs.create-tag.outputs.version }}/*.dmg
            
  release:
    needs: [create-tag, electron]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          show-progress: false
          ref: ${{ github.ref_name }}
    
      - name: Download artifact file for windows
        uses: actions/download-artifact@v4
        with:
          name: AutoInject-win
          path: package

      - name: Download artifact file for linux
        uses: actions/download-artifact@v4
        with:
          name: AutoInject-linux
          path: package

      - name: Download artifact file for macos
        uses: actions/download-artifact@v4
        with:
          name: AutoInject-macos
          path: package
    
      - name: Release to Github
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          body_path: CHANGELOG.md
          files: |
            package/*
