name: ci

on: [push]

jobs:
  create-tag:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          show-progress: false
          ref: feature-1.2.0

      - name: Get version
        id: package
        uses: actions/github-script@v5
        with:
          script: |
            const package = require('./package.json')
            return package.version

      - name: Output version
        id: version
        run: | 
          echo "The version is ${{ steps.package.outputs.result }}"
          echo "version=$(echo ${{ steps.package.outputs.result }} | tr -d '"')" >> $GITHUB_OUTPUT
          echo "release_tag=$(echo v${{ steps.package.outputs.result }} | tr -d '"')" >> $GITHUB_OUTPUT
    outputs:
      version: ${{ steps.version.outputs.version }}
      release_tag: ${{ steps.version.outputs.release_tag }}
    
  eletron:
    needs: create-tag
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            build: "build:linux"
            suffix: (deb|AppImage)
          - os: windows-latest
            build: "build:win"
            suffix: (exe|zip)
        
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          show-progress: false
          ref: feature-1.2.0

      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: '16'

      - name: Check release tag
        run: echo "The release_tag is ${{ needs.create-tag.outputs.release_tag }}"
          
      - name: Build
        uses: samuelmeuli/action-electron-builder@v1.6.0
        with: 
          github_token: ${{ secrets.GITHUB_TOKEN }}
          release: ${{ needs.create-tag.outputs.version }}
          build_script_name: ${{ matrix.build }}

      - name: Check Build
        run: ls ${{ github.workspace }}/release/${{ needs.create-tag.outputs.version }}

      - name: Upload to Release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_name: ${{ format('{0}', github.repository) }}
          file_glob: true
          file: release/${{ needs.create-tag.outputs.version }}/*.${{ matrix.suffix }}
          tag: ${{ needs.create-tag.outputs.release_tag }}
          overwrite: true
